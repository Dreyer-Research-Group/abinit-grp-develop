#!/bin/sh
#
# Generated by make-fallbacks-config-in on 2019/03/04 15:24:55 +0000

#
# Provide information about Abinit Fallbacks configuration
#

#
# IMPORTANT NOTE
#
# This file has been automatically generated by the make-fallbacks-config-in
# script. Any manual changes will systematically be overwritten.
#

                    # ------------------------------------ #

# Init fallbacks parameters
enable_libxc='@enable_libxc@'
afb_libxc_version='4.2.3'
afb_libxc_status='disabled'
afb_libxc_has_deps='no'
afb_libxc_deps=''
afb_libxc_has_bins='no'
afb_libxc_bins=''
afb_libxc_has_cflags='no'
afb_libxc_cflags=''
afb_libxc_has_cppflags='no'
afb_libxc_cppflags=''
afb_libxc_has_fcflags='no'
afb_libxc_fcflags=''
afb_libxc_has_fppflags='no'
afb_libxc_fppflags=''
afb_libxc_has_incs='no'
afb_libxc_incs=''
afb_libxc_has_depincs='no'
afb_libxc_has_ldflags='no'
afb_libxc_ldflags=''
afb_libxc_has_libs='no'
afb_libxc_libs=''
afb_libxc_has_deplibs='no'
enable_linalg='@enable_linalg@'
afb_linalg_version='abinit_6.10'
afb_linalg_status='disabled'
afb_linalg_has_deps='no'
afb_linalg_deps=''
afb_linalg_has_bins='no'
afb_linalg_bins=''
afb_linalg_has_cflags='no'
afb_linalg_cflags=''
afb_linalg_has_cppflags='no'
afb_linalg_cppflags=''
afb_linalg_has_fcflags='no'
afb_linalg_fcflags=''
afb_linalg_has_fppflags='no'
afb_linalg_fppflags=''
afb_linalg_has_incs='no'
afb_linalg_incs=''
afb_linalg_has_depincs='no'
afb_linalg_has_ldflags='no'
afb_linalg_ldflags=''
afb_linalg_has_libs='no'
afb_linalg_libs=''
afb_linalg_has_deplibs='no'
enable_netcdf4='@enable_netcdf4@'
afb_netcdf4_version='4.4.1.1'
afb_netcdf4_status='disabled'
afb_netcdf4_has_deps='no'
afb_netcdf4_deps=''
afb_netcdf4_has_bins='no'
afb_netcdf4_bins=''
afb_netcdf4_has_depbins='no'
afb_netcdf4_has_cflags='no'
afb_netcdf4_cflags=''
afb_netcdf4_has_cppflags='no'
afb_netcdf4_cppflags=''
afb_netcdf4_has_fcflags='no'
afb_netcdf4_fcflags=''
afb_netcdf4_has_fppflags='no'
afb_netcdf4_fppflags=''
afb_netcdf4_has_incs='no'
afb_netcdf4_incs=''
afb_netcdf4_has_depincs='no'
afb_netcdf4_has_ldflags='no'
afb_netcdf4_ldflags=''
afb_netcdf4_has_libs='no'
afb_netcdf4_libs=''
afb_netcdf4_has_deplibs='no'
enable_atompaw='@enable_atompaw@'
afb_atompaw_version='4.1.0.5'
afb_atompaw_status='disabled'
afb_atompaw_has_deps='no'
afb_atompaw_deps=''
afb_atompaw_has_bins='no'
afb_atompaw_bins=''
afb_atompaw_has_depbins='no'
afb_atompaw_has_cflags='no'
afb_atompaw_cflags=''
afb_atompaw_has_cppflags='no'
afb_atompaw_cppflags=''
afb_atompaw_has_fcflags='no'
afb_atompaw_fcflags=''
afb_atompaw_has_fppflags='no'
afb_atompaw_fppflags=''
afb_atompaw_has_incs='no'
afb_atompaw_incs=''
afb_atompaw_has_ldflags='no'
afb_atompaw_ldflags=''
afb_atompaw_has_libs='no'
afb_atompaw_libs=''
afb_atompaw_has_deplibs='no'
enable_netcdf4_fortran='@enable_netcdf4_fortran@'
afb_netcdf4_fortran_version='4.4.4'
afb_netcdf4_fortran_status='disabled'
afb_netcdf4_fortran_has_deps='no'
afb_netcdf4_fortran_deps=''
afb_netcdf4_fortran_has_bins='no'
afb_netcdf4_fortran_bins=''
afb_netcdf4_fortran_has_cflags='no'
afb_netcdf4_fortran_cflags=''
afb_netcdf4_fortran_has_cppflags='no'
afb_netcdf4_fortran_cppflags=''
afb_netcdf4_fortran_has_fcflags='no'
afb_netcdf4_fortran_fcflags=''
afb_netcdf4_fortran_has_fppflags='no'
afb_netcdf4_fortran_fppflags=''
afb_netcdf4_fortran_has_incs='no'
afb_netcdf4_fortran_incs=''
afb_netcdf4_fortran_has_depincs='no'
afb_netcdf4_fortran_has_ldflags='no'
afb_netcdf4_fortran_ldflags=''
afb_netcdf4_fortran_has_libs='no'
afb_netcdf4_fortran_libs=''
afb_netcdf4_fortran_has_deplibs='no'
enable_wannier90='@enable_wannier90@'
afb_wannier90_version='2.0.1.1'
afb_wannier90_status='disabled'
afb_wannier90_has_deps='no'
afb_wannier90_deps=''
afb_wannier90_has_bins='no'
afb_wannier90_bins=''
afb_wannier90_has_depbins='no'
afb_wannier90_has_cflags='no'
afb_wannier90_cflags=''
afb_wannier90_has_cppflags='no'
afb_wannier90_cppflags=''
afb_wannier90_has_fcflags='no'
afb_wannier90_fcflags=''
afb_wannier90_has_fppflags='no'
afb_wannier90_fppflags=''
afb_wannier90_has_incs='no'
afb_wannier90_incs=''
afb_wannier90_has_ldflags='no'
afb_wannier90_ldflags=''
afb_wannier90_has_libs='no'
afb_wannier90_libs=''
afb_wannier90_has_deplibs='no'
enable_xmlf90='@enable_xmlf90@'
afb_xmlf90_version='1.5.3.1'
afb_xmlf90_status='disabled'
afb_xmlf90_has_deps='no'
afb_xmlf90_deps=''
afb_xmlf90_has_bins='no'
afb_xmlf90_bins=''
afb_xmlf90_has_cflags='no'
afb_xmlf90_cflags=''
afb_xmlf90_has_cppflags='no'
afb_xmlf90_cppflags=''
afb_xmlf90_has_fcflags='no'
afb_xmlf90_fcflags=''
afb_xmlf90_has_fppflags='no'
afb_xmlf90_fppflags=''
afb_xmlf90_has_incs='no'
afb_xmlf90_incs=''
afb_xmlf90_has_depincs='no'
afb_xmlf90_has_ldflags='no'
afb_xmlf90_ldflags=''
afb_xmlf90_has_libs='no'
afb_xmlf90_libs=''
afb_xmlf90_has_deplibs='no'
enable_libpsml='@enable_libpsml@'
afb_libpsml_version='1.1.7'
afb_libpsml_status='disabled'
afb_libpsml_has_deps='no'
afb_libpsml_deps=''
afb_libpsml_has_bins='no'
afb_libpsml_bins=''
afb_libpsml_has_cflags='no'
afb_libpsml_cflags=''
afb_libpsml_has_cppflags='no'
afb_libpsml_cppflags=''
afb_libpsml_has_fcflags='no'
afb_libpsml_fcflags=''
afb_libpsml_has_fppflags='no'
afb_libpsml_fppflags=''
afb_libpsml_has_incs='no'
afb_libpsml_incs=''
afb_libpsml_has_depincs='no'
afb_libpsml_has_ldflags='no'
afb_libpsml_ldflags=''
afb_libpsml_has_libs='no'
afb_libpsml_libs=''
afb_libpsml_has_deplibs='no'
enable_yaml='@enable_yaml@'
afb_yaml_version='0.1.6'
afb_yaml_status='disabled'
afb_yaml_has_deps='no'
afb_yaml_deps=''
afb_yaml_has_bins='no'
afb_yaml_bins=''
afb_yaml_has_cflags='no'
afb_yaml_cflags=''
afb_yaml_has_cppflags='no'
afb_yaml_cppflags=''
afb_yaml_has_fcflags='no'
afb_yaml_fcflags=''
afb_yaml_has_fppflags='no'
afb_yaml_fppflags=''
afb_yaml_has_incs='no'
afb_yaml_incs=''
afb_yaml_has_depincs='no'
afb_yaml_has_ldflags='no'
afb_yaml_ldflags=''
afb_yaml_has_libs='no'
afb_yaml_libs=''
afb_yaml_has_deplibs='no'
enable_bigdft='@enable_bigdft@'
afb_bigdft_version='1.7.1.28'
afb_bigdft_status='disabled'
afb_bigdft_has_deps='no'
afb_bigdft_deps=''
afb_bigdft_has_bins='no'
afb_bigdft_bins=''
afb_bigdft_has_cflags='no'
afb_bigdft_cflags=''
afb_bigdft_has_cppflags='no'
afb_bigdft_cppflags=''
afb_bigdft_has_fcflags='no'
afb_bigdft_fcflags=''
afb_bigdft_has_fppflags='no'
afb_bigdft_fppflags=''
afb_bigdft_has_incs='no'
afb_bigdft_incs=''
afb_bigdft_has_depincs='no'
afb_bigdft_has_ldflags='no'
afb_bigdft_ldflags=''
afb_bigdft_has_libs='no'
afb_bigdft_libs=''
afb_bigdft_has_deplibs='no'

# Set fallbacks parameters
if test "${enable_libxc}" = "yes"; then
  afb_libxc_status='enabled'
  afb_libxc_has_deps='no'
  afb_libxc_has_bins='no'
  afb_libxc_has_cflags='yes'
  afb_libxc_cflags='@CFLAGS_LIBXC@'
  afb_libxc_has_cppflags='yes'
  afb_libxc_cppflags='@CPPFLAGS_LIBXC@'
  afb_libxc_has_fcflags='yes'
  afb_libxc_fcflags='@FCFLAGS_LIBXC@'
  afb_libxc_has_fppflags='yes'
  afb_libxc_fppflags='@FPPFLAGS_LIBXC@'
  afb_libxc_has_incs='yes'
  afb_libxc_incs='-I@prefix@/libxc/4.2.3/include'
  afb_libxc_has_ldflags='yes'
  afb_libxc_ldflags='@LDFLAGS_LIBXC@'
  afb_libxc_has_libs='yes'
  afb_libxc_libs='-L@prefix@/libxc/4.2.3/lib -lxc'
else
  afb_libxc_incs='@with_libxc_incs@'
  afb_libxc_libs='@with_libxc_libs@'
fi
if test "${enable_linalg}" = "yes"; then
  afb_linalg_status='enabled'
  afb_linalg_has_deps='no'
  afb_linalg_has_bins='no'
  afb_linalg_has_cflags='no'
  afb_linalg_has_cppflags='no'
  afb_linalg_has_fcflags='yes'
  afb_linalg_fcflags='@FCFLAGS_LINALG@'
  afb_linalg_has_fppflags='yes'
  afb_linalg_fppflags='@FPPFLAGS_LINALG@'
  afb_linalg_has_incs='yes'
  afb_linalg_incs='-I@prefix@/linalg/abinit_6.10/include'
  afb_linalg_has_ldflags='yes'
  afb_linalg_ldflags='@LDFLAGS_LINALG@'
  afb_linalg_has_libs='yes'
  afb_linalg_libs='-L@prefix@/linalg/abinit_6.10/lib -llapack -lblas'
else
  afb_linalg_incs='@with_linalg_incs@'
  afb_linalg_libs='@with_linalg_libs@'
fi
if test "${enable_netcdf4}" = "yes"; then
  afb_netcdf4_status='enabled'
  afb_netcdf4_has_deps='no'
  afb_netcdf4_has_bins='yes'
  afb_netcdf4_bins='@prefix@/netcdf4/4.4.1.1/bin'
  afb_netcdf4_has_cflags='yes'
  afb_netcdf4_cflags='@CFLAGS_NETCDF4@'
  afb_netcdf4_has_cppflags='yes'
  afb_netcdf4_cppflags='@CPPFLAGS_NETCDF4@'
  afb_netcdf4_has_fcflags='no'
  afb_netcdf4_has_fppflags='no'
  afb_netcdf4_has_incs='yes'
  afb_netcdf4_incs='-I@prefix@/netcdf4/4.4.1.1/include'
  afb_netcdf4_has_ldflags='yes'
  afb_netcdf4_ldflags='@LDFLAGS_NETCDF4@'
  afb_netcdf4_has_libs='yes'
  afb_netcdf4_libs='-L@prefix@/netcdf4/4.4.1.1/lib -lnetcdf'
else
  afb_netcdf4_bins='@with_netcdf4_bins@'
  afb_netcdf4_incs='@with_netcdf4_incs@'
  afb_netcdf4_libs='@with_netcdf4_libs@'
fi
if test "${enable_atompaw}" = "yes"; then
  afb_atompaw_status='enabled'
  afb_atompaw_has_deps='yes'
  afb_atompaw_deps='linalg libxc'
  afb_atompaw_has_bins='yes'
  afb_atompaw_bins='@prefix@/atompaw/4.1.0.5/bin'
  afb_atompaw_has_cflags='no'
  afb_atompaw_has_cppflags='no'
  afb_atompaw_has_fcflags='yes'
  afb_atompaw_fcflags='@FCFLAGS_ATOMPAW@'
  afb_atompaw_has_fppflags='yes'
  afb_atompaw_fppflags='@FPPFLAGS_ATOMPAW@'
  afb_atompaw_has_incs='no'
  afb_atompaw_has_ldflags='yes'
  afb_atompaw_ldflags='@LDFLAGS_ATOMPAW@'
  afb_atompaw_has_libs='yes'
  afb_atompaw_libs='-L@prefix@/atompaw/4.1.0.5/lib -latompaw'
  afb_atompaw_has_deplibs='yes'
  afb_atompaw_deplibs="${afb_libxc_libs} ${afb_linalg_libs}"
fi
if test "${enable_netcdf4_fortran}" = "yes"; then
  afb_netcdf4_fortran_status='enabled'
  afb_netcdf4_fortran_has_deps='yes'
  afb_netcdf4_fortran_deps='netcdf4'
  afb_netcdf4_fortran_has_bins='no'
  afb_netcdf4_fortran_has_cflags='yes'
  afb_netcdf4_fortran_cflags='@CFLAGS_NETCDF4_FORTRAN@'
  afb_netcdf4_fortran_has_cppflags='yes'
  afb_netcdf4_fortran_cppflags='@CPPFLAGS_NETCDF4_FORTRAN@'
  afb_netcdf4_fortran_has_fcflags='yes'
  afb_netcdf4_fortran_fcflags='@FCFLAGS_NETCDF4_FORTRAN@'
  afb_netcdf4_fortran_has_fppflags='yes'
  afb_netcdf4_fortran_fppflags='@FPPFLAGS_NETCDF4_FORTRAN@'
  afb_netcdf4_fortran_has_incs='yes'
  afb_netcdf4_fortran_incs='-I@prefix@/netcdf4_fortran/4.4.4/include'
  afb_netcdf4_fortran_has_depincs='yes'
  afb_netcdf4_fortran_depincs="${afb_netcdf4_incs}"
  afb_netcdf4_fortran_has_ldflags='yes'
  afb_netcdf4_fortran_ldflags='@LDFLAGS_NETCDF4_FORTRAN@'
  afb_netcdf4_fortran_has_libs='yes'
  afb_netcdf4_fortran_libs='-L@prefix@/netcdf4_fortran/4.4.4/lib -lnetcdff'
  afb_netcdf4_fortran_has_deplibs='yes'
  afb_netcdf4_fortran_deplibs="${afb_netcdf4_libs}"
else
  afb_netcdf4_fortran_incs='@with_netcdf4_fortran_incs@'
  afb_netcdf4_fortran_libs='@with_netcdf4_fortran_libs@'
fi
if test "${enable_wannier90}" = "yes"; then
  afb_wannier90_status='enabled'
  afb_wannier90_has_deps='yes'
  afb_wannier90_deps='linalg'
  afb_wannier90_has_bins='yes'
  afb_wannier90_bins='@prefix@/wannier90/2.0.1.1/bin'
  afb_wannier90_has_cflags='no'
  afb_wannier90_has_cppflags='no'
  afb_wannier90_has_fcflags='yes'
  afb_wannier90_fcflags='@FCFLAGS_WANNIER90@'
  afb_wannier90_has_fppflags='yes'
  afb_wannier90_fppflags='@FPPFLAGS_WANNIER90@'
  afb_wannier90_has_incs='no'
  afb_wannier90_has_ldflags='yes'
  afb_wannier90_ldflags='@LDFLAGS_WANNIER90@'
  afb_wannier90_has_libs='yes'
  afb_wannier90_libs='-L@prefix@/wannier90/2.0.1.1/lib -lwannier90'
  afb_wannier90_has_deplibs='yes'
  afb_wannier90_deplibs="${afb_linalg_libs}"
fi
if test "${enable_xmlf90}" = "yes"; then
  afb_xmlf90_status='enabled'
  afb_xmlf90_has_deps='no'
  afb_xmlf90_has_bins='no'
  afb_xmlf90_has_cflags='no'
  afb_xmlf90_has_cppflags='no'
  afb_xmlf90_has_fcflags='yes'
  afb_xmlf90_fcflags='@FCFLAGS_XMLF90@'
  afb_xmlf90_has_fppflags='yes'
  afb_xmlf90_fppflags='@FPPFLAGS_XMLF90@'
  afb_xmlf90_has_incs='yes'
  afb_xmlf90_incs='-I@prefix@/xmlf90/1.5.3.1/include'
  afb_xmlf90_has_ldflags='yes'
  afb_xmlf90_ldflags='@LDFLAGS_XMLF90@'
  afb_xmlf90_has_libs='yes'
  afb_xmlf90_libs='-L@prefix@/xmlf90/1.5.3.1/lib -lxmlf90'
else
  afb_xmlf90_incs='@with_xmlf90_incs@'
  afb_xmlf90_libs='@with_xmlf90_libs@'
fi
if test "${enable_libpsml}" = "yes"; then
  afb_libpsml_status='enabled'
  afb_libpsml_has_deps='yes'
  afb_libpsml_deps='libxc xmlf90'
  afb_libpsml_has_bins='no'
  afb_libpsml_has_cflags='no'
  afb_libpsml_has_cppflags='no'
  afb_libpsml_has_fcflags='yes'
  afb_libpsml_fcflags='@FCFLAGS_LIBPSML@'
  afb_libpsml_has_fppflags='yes'
  afb_libpsml_fppflags='@FPPFLAGS_LIBPSML@'
  afb_libpsml_has_incs='yes'
  afb_libpsml_incs='-I@prefix@/libpsml/1.1.7/include'
  afb_libpsml_has_depincs='yes'
  afb_libpsml_depincs="${afb_libxc_incs} ${afb_xmlf90_incs}"
  afb_libpsml_has_ldflags='yes'
  afb_libpsml_ldflags='@LDFLAGS_LIBPSML@'
  afb_libpsml_has_libs='yes'
  afb_libpsml_libs='-L@prefix@/libpsml/1.1.7/lib -lpsml'
  afb_libpsml_has_deplibs='yes'
  afb_libpsml_deplibs="${afb_xmlf90_libs} ${afb_libxc_libs}"
fi
if test "${enable_yaml}" = "yes"; then
  afb_yaml_status='enabled'
  afb_yaml_has_deps='no'
  afb_yaml_has_bins='no'
  afb_yaml_has_cflags='yes'
  afb_yaml_cflags='@CFLAGS_YAML@'
  afb_yaml_has_cppflags='yes'
  afb_yaml_cppflags='@CPPFLAGS_YAML@'
  afb_yaml_has_fcflags='no'
  afb_yaml_has_fppflags='no'
  afb_yaml_has_incs='yes'
  afb_yaml_incs='-I@prefix@/yaml/0.1.6/include'
  afb_yaml_has_ldflags='yes'
  afb_yaml_ldflags='@LDFLAGS_YAML@'
  afb_yaml_has_libs='yes'
  afb_yaml_libs='-L@prefix@/yaml/0.1.6/lib -lyaml'
else
  afb_yaml_incs='@with_yaml_incs@'
  afb_yaml_libs='@with_yaml_libs@'
fi
if test "${enable_bigdft}" = "yes"; then
  afb_bigdft_status='enabled'
  afb_bigdft_has_deps='yes'
  afb_bigdft_deps='linalg netcdf4_fortran libxc yaml'
  afb_bigdft_has_bins='no'
  afb_bigdft_has_cflags='yes'
  afb_bigdft_cflags='@CFLAGS_BIGDFT@'
  afb_bigdft_has_cppflags='yes'
  afb_bigdft_cppflags='@CPPFLAGS_BIGDFT@'
  afb_bigdft_has_fcflags='yes'
  afb_bigdft_fcflags='@FCFLAGS_BIGDFT@'
  afb_bigdft_has_fppflags='yes'
  afb_bigdft_fppflags='@FPPFLAGS_BIGDFT@'
  afb_bigdft_has_incs='yes'
  afb_bigdft_incs='-I@prefix@/bigdft/1.7.1.28/include'
  afb_bigdft_has_depincs='yes'
  afb_bigdft_depincs="${afb_linalg_incs} ${afb_netcdf4_fortran_incs} ${afb_libxc_incs} ${afb_yaml_incs}"
  afb_bigdft_has_ldflags='yes'
  afb_bigdft_ldflags='@LDFLAGS_BIGDFT@'
  afb_bigdft_has_libs='yes'
  afb_bigdft_libs='-L@prefix@/bigdft/1.7.1.28/lib -lbigdft-1 -lpaw_bigdft -labinit -lyaml'
  afb_bigdft_has_deplibs='yes'
  afb_bigdft_deplibs="${afb_yaml_libs} ${afb_libxc_libs} ${afb_netcdf4_fortran_libs} ${afb_linalg_libs}"
fi

                    # ------------------------------------ #

# Check input parameters and print usage if needed
my_name=`basename "${0}"`
if test "${#}" -lt "2"; then
  cat <<EOF
Usage: ${my_name} --<item> <package>

where <package> is the selected fallback and <item> is the kind of
information desired.

<item> can be:

  * avail    : get a space-separated list of available items for the
               selected package, i.e. which of the following queries
               can be performed for this package;
  * bins     : get path to the binaries of the package;
  * cflags   : get cflags used to build the package;
  * cppflags : get C preprocessing flags used to build the package
               (except includes, see "incs" below);
  * deps     : get a list of packages the selected one depends on;
  * depincs  : get include flags for the package dependencies;
  * deplibs  : get library flags for the package dependencies;
  * enabled  : tell whether the package has been enabled;
  * fcflags  : get Fortran flags used to build the package;
  * fppflags : get Fortran preprocessing flags used to build the package;
               (except includes, see "incs" below);
  * incs     : get include flags to installed C headers and/or Fortran modules;
  * ldflags  : get link flags used to build the package;
  * libs     : get library flags to link against the installed package;
  * pkgver   : get package version;
  * shell    : get shell code to use the package.

<package> can be:

  * atompaw          (${afb_atompaw_status} in this bundle)
  * bigdft           (${afb_bigdft_status} in this bundle)
  * libpsml          (${afb_libpsml_status} in this bundle)
  * libxc            (${afb_libxc_status} in this bundle)
  * linalg           (${afb_linalg_status} in this bundle)
  * netcdf4          (${afb_netcdf4_status} in this bundle)
  * netcdf4_fortran  (${afb_netcdf4_fortran_status} in this bundle)
  * wannier90        (${afb_wannier90_status} in this bundle)
  * xmlf90           (${afb_xmlf90_status} in this bundle)
  * yaml             (${afb_yaml_status} in this bundle)

EOF
  exit 0
fi

                    # ------------------------------------ #

# Prepare run
my_cmd=`echo "${1}" | sed -e 's/..//'`
my_pkg="${2}"
my_item=`eval echo \$\{afb_${my_pkg}_${my_cmd}\}`

# Check package
case "${my_pkg}" in

  atompaw|bigdft|libpsml|libxc|linalg|netcdf4|netcdf4_fortran|wannier90|xmlf90|yaml)
    :
    ;;

  *)
    echo "Error: unknown package '${my_pkg}'" >&2
    exit 1

esac

# Execute command
case "${my_cmd}" in

  avail)
    item_list=""
    for item in bins cflags cppflags fcflags fppflags incs ldflags libs; do
      chk_enab=`eval echo \$\{enable_${my_pkg}\}`
      chk_item=`eval echo \$\{afb_${my_pkg}_has_${item}\}`
      test "${chk_enab}" = "yes" -a "${chk_item}" = "yes" &&         item_list="${item_list} ${item}"
    done
    item_list=`echo "${item_list}" | sed -e 's/^ //'`
    echo "${item_list}"
    ;;

  depincs|deplibs)
    pkg_has_deps=`eval echo \$\{afb_${my_pkg}_has_${my_cmd}\}`
    if test "${pkg_has_deps}" = "yes"; then
      echo "${my_item}"
    else
      echo "Error: no '${my_cmd}' item for package '${my_pkg}'" >&2
      exit 1
    fi
    ;;

  deps)
    pkg_deps=`eval echo \$\{afb_${my_pkg}_${my_cmd}\}`
    if test "${pkg_deps}" != ""; then
      echo "${pkg_deps}"
    fi
    ;;

  enabled)
    pkg_enabled=`eval echo \$\{enable_${my_pkg}\}`
    echo "${pkg_enabled}"
    ;;

  bins|cflags|cppflags|fcflags|fppflags|incs|ldflags|libs)
    pkg_has_item=`eval echo \$\{afb_${my_pkg}_has_${my_cmd}\}`
    if test "${pkg_has_item}" = "yes"; then
      echo "${my_item}"
    else
      echo "Error: no '${my_cmd}' item for package '${my_pkg}'" >&2
      exit 1
    fi
    ;;

  pkgver)
    eval echo \$\{afb_${my_pkg}_version\}
    ;;

  shell)
    pkg_has_libs=`eval echo \$\{afb_${my_pkg}_has_libs\}`
    if test "${pkg_has_libs}" = "yes"; then
      echo 'LD_LIBRARY_PATH="@prefix@/lib:${LD_LIBRARY_PATH}"'
      echo 'export LD_LIBRARY_PATH'
      echo 'LIBRARY_PATH="@prefix@/lib:${LIBRARY_PATH}"'
      echo 'export LIBRARY_PATH'
    fi
    pkg_has_bins=`eval echo \$\{afb_${my_pkg}_has_bins\}`
    if test "${pkg_has_bins}" = "yes"; then
      echo 'MANPATH="@prefix@/share/man:${MANPATH}"'
      echo 'export MANPATH'
      echo 'PATH="@prefix@/bin:${PATH}"'
      echo 'export PATH'
    fi
    ;;

  *)
    echo "Error: unrecognized option '${1}'" >&2
    exit 1

esac

exit 0
