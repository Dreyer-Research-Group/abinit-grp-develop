#                                                          -*- Automake -*-
# Makefile for ABINIT
# Generated by make-makefiles-fallbacks on 2019/03/04 16:10:58 +0000

#
# IMPORTANT NOTE
#
# Any manual change to this file will systematically be overwritten.
# Please modify the make-makefiles-fallbacks script or its config file instead.
#

ACLOCAL_AMFLAGS = -I config/m4

SUBDIRS = src .

all-local:
	-$(MAKE) libxc
	@echo 'Checking build of libxc fallback'
	test -e stamps/libxc-install-stamp
	-$(MAKE) linalg
	@echo 'Checking build of linalg fallback'
	test -e stamps/linalg-install-stamp
	-$(MAKE) atompaw
	@echo 'Checking build of atompaw fallback'
	test -e stamps/atompaw-install-stamp
	-$(MAKE) netcdf4
	@echo 'Checking build of netcdf4 fallback'
	test -e stamps/netcdf4-install-stamp
	-$(MAKE) netcdf4_fortran
	@echo 'Checking build of netcdf4_fortran fallback'
	test -e stamps/netcdf4_fortran-install-stamp
	-$(MAKE) wannier90
	@echo 'Checking build of wannier90 fallback'
	test -e stamps/wannier90-install-stamp
	-$(MAKE) xmlf90
	@echo 'Checking build of xmlf90 fallback'
	test -e stamps/xmlf90-install-stamp
	-$(MAKE) libpsml
	@echo 'Checking build of libpsml fallback'
	test -e stamps/libpsml-install-stamp
	-$(MAKE) yaml
	@echo 'Checking build of yaml fallback'
	test -e stamps/yaml-install-stamp
	-$(MAKE) bigdft
	@echo 'Checking build of bigdft fallback'
	test -e stamps/bigdft-install-stamp
	@echo ""
	@if test -x "${DESTDIR}${bindir}/abinit-fallbacks-config"; then \
	  echo "The fallbacks are now ready to use."; \
	  echo ""; \
	  echo "You may point Abinit to them through one of the following choices:"; \
	  echo ""; \
          echo "  - set with_fallbacks_prefix='${DESTDIR}${prefix}' in your Abinit config file;"; \
	  echo ""; \
	  echo "  - use the --with-fallbacks-prefix='${DESTDIR}${prefix}' option of Abinit's configure."; \
	else \
	  echo "All requested fallbacks have been built."; \
	  echo "you may now type 'make install' to finish the installation."; \
	fi
	@echo ""

                    ########################################

# Package: libxc
libxc_pkg_name = @libxc_pkg_name@

if DO_BUILD_LIBXC
libxc: stamps/libxc-install-stamp

stamps/libxc-install-stamp: stamps/libxc-build-stamp
	cd sources/$(libxc_pkg_name)/tmp-build && $(MAKE) install @SET_MAKE@
	rm -f $(DESTDIR)@prefix@/libxc/default
	$(LN_S) 4.2.3 $(DESTDIR)@prefix@/libxc/default
	@touch stamps/libxc-install-stamp

stamps/libxc-build-stamp: stamps/libxc-config-stamp
	cd sources/$(libxc_pkg_name)/tmp-build && $(MAKE) -j 4 @SET_MAKE@
	@touch stamps/libxc-build-stamp

stamps/libxc-config-stamp: stamps/libxc-patch-stamp
	cd sources/$(libxc_pkg_name)/tmp-build && \
	  export DYLD_LIBRARY_PATH="${DYLD_LIBRARY_PATH}" && \
	  export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}" && \
	  export LIBRARY_PATH="${LIBRARY_PATH}" && \
	  CPP="$(CPP)" \
	  CPPFLAGS="$(CPPFLAGS_LIBXC)  $(AM_CPPFLAGS)" \
	  CC="$(CC)" \
	  CFLAGS="$(CFLAGS_LIBXC)" \
	  CXX="$(CXX)" \
	  CXXFLAGS="$(CXXFLAGS_LIBXC)" \
          FCCPP="$(TRUE_CPP)" \
	  F77="$(FC)" \
	  FFLAGS="$(FCFLAGS_FIXEDFORM) $(FCFLAGS_LIBXC)  $(AM_CPPFLAGS)" \
	  F90="$(FC)" \
	  F90FLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_LIBXC)  $(AM_CPPFLAGS)" \
	  FC="$(FC)" \
	  FCFLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_LIBXC)  $(AM_CPPFLAGS)" \
	  LDFLAGS="$(FC_LDFLAGS) $(LDFLAGS_LIBXC)" \
	  LIBS="$(LIBS_LIBXC) " \
	  AR="$(AR)" \
	  ARFLAGS="$(ARFLAGS) $(ARFLAGS_CMD)" \
	  RANLIB="$(RANLIB)" \
	  ac_fc_srcext="F90" \
	  /bin/sh ../configure \
	    --prefix="@prefix@/libxc/4.2.3" \
	    --bindir="@prefix@/libxc/4.2.3/bin" \
	    --includedir="@prefix@/libxc/4.2.3/include" \
	    --libdir="@prefix@/libxc/4.2.3/lib" \
	    $(CFGFLAGS_LIBXC)
	@touch stamps/libxc-config-stamp

stamps/libxc-patch-stamp: stamps/libxc-unfold-stamp
	@echo "No patch to apply"
	@touch stamps/libxc-patch-stamp

stamps/libxc-unfold-stamp:
	cd sources && \
	  gzip -cd $(abinit_tardir)/$(libxc_pkg_name).tar.gz | tar xf -
	mkdir sources/$(libxc_pkg_name)/tmp-build
	@touch stamps/libxc-unfold-stamp
else
libxc:
	@echo "The build of libxc has been disabled"
	@touch stamps/libxc-install-stamp
endif

                    ########################################

# Package clean-up: libxc
clean_libxc:
	rm -rf exports/libxc-4.2.3 sources/libxc-4.2.3 stamps/libxc-*

                    ########################################

# Package: linalg
linalg_pkg_name = @linalg_pkg_name@

if DO_BUILD_LINALG
linalg: stamps/linalg-install-stamp

stamps/linalg-install-stamp: stamps/linalg-build-stamp
	cd sources/$(linalg_pkg_name)/tmp-build && $(MAKE) install @SET_MAKE@
	rm -f $(DESTDIR)@prefix@/linalg/default
	$(LN_S) abinit_6.10 $(DESTDIR)@prefix@/linalg/default
	@touch stamps/linalg-install-stamp

stamps/linalg-build-stamp: stamps/linalg-config-stamp
	cd sources/$(linalg_pkg_name)/tmp-build && $(MAKE) -j 5 @SET_MAKE@
	@touch stamps/linalg-build-stamp

stamps/linalg-config-stamp: stamps/linalg-patch-stamp
	cd sources/$(linalg_pkg_name) && \
	  export DYLD_LIBRARY_PATH="${DYLD_LIBRARY_PATH}" && \
	  export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}" && \
	  export LIBRARY_PATH="${LIBRARY_PATH}" && \
	  CPP="$(CPP)" \
	  CPPFLAGS="$(CPPFLAGS_LINALG)  $(AM_CPPFLAGS)" \
	  CC="$(CC)" \
	  CFLAGS="$(CFLAGS_LINALG)" \
	  CXX="$(CXX)" \
	  CXXFLAGS="$(CXXFLAGS_LINALG)" \
          FCCPP="$(TRUE_CPP)" \
	  F77="$(FC)" \
	  FFLAGS="$(FCFLAGS_FIXEDFORM) $(FCFLAGS_LINALG)  $(AM_CPPFLAGS)" \
	  F90="$(FC)" \
	  F90FLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_LINALG)  $(AM_CPPFLAGS)" \
	  FC="$(FC)" \
	  FCFLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_LINALG)  $(AM_CPPFLAGS)" \
	  LDFLAGS="$(FC_LDFLAGS) $(LDFLAGS_LINALG)" \
	  LIBS="$(LIBS_LINALG) " \
	  AR="$(AR)" \
	  ARFLAGS="$(ARFLAGS) $(ARFLAGS_CMD)" \
	  RANLIB="$(RANLIB)" \
	  ac_fc_srcext="F90" \
	  /bin/sh ./configure \
	    --prefix="@prefix@/linalg/abinit_6.10" \
	    --bindir="@prefix@/linalg/abinit_6.10/bin" \
	    --includedir="@prefix@/linalg/abinit_6.10/include" \
	    --libdir="@prefix@/linalg/abinit_6.10/lib" \
	    $(CFGFLAGS_LINALG)
	@touch stamps/linalg-config-stamp

stamps/linalg-patch-stamp: stamps/linalg-unfold-stamp
	@echo "No patch to apply"
	@touch stamps/linalg-patch-stamp

stamps/linalg-unfold-stamp:
	cd sources && \
	  gzip -cd $(abinit_tardir)/$(linalg_pkg_name).tar.gz | tar xf -
	$(LN_S) \. sources/$(linalg_pkg_name)/tmp-build
	@touch stamps/linalg-unfold-stamp
else
linalg:
	@echo "The build of linalg has been disabled"
	@touch stamps/linalg-install-stamp
endif

                    ########################################

# Package clean-up: linalg
clean_linalg:
	rm -rf exports/lapack-abinit_6.10 sources/lapack-abinit_6.10 stamps/linalg-*

                    ########################################

# Package: atompaw
atompaw_pkg_name = @atompaw_pkg_name@

if DO_BUILD_ATOMPAW
atompaw: stamps/atompaw-install-stamp

stamps/atompaw-install-stamp: stamps/atompaw-build-stamp
	cd sources/$(atompaw_pkg_name)/tmp-build && $(MAKE) install @SET_MAKE@
	rm -f $(DESTDIR)@prefix@/atompaw/default
	$(LN_S) 4.1.0.5 $(DESTDIR)@prefix@/atompaw/default
	@touch stamps/atompaw-install-stamp

stamps/atompaw-build-stamp: stamps/atompaw-config-stamp
	cd sources/$(atompaw_pkg_name)/tmp-build && $(MAKE) -j 1 @SET_MAKE@
	@touch stamps/atompaw-build-stamp

stamps/atompaw-config-stamp: stamps/atompaw-patch-stamp
	cd sources/$(atompaw_pkg_name)/tmp-build && \
	  export DYLD_LIBRARY_PATH="@prefix@/linalg/default/lib:@prefix@/libxc/default/lib:${DYLD_LIBRARY_PATH}" && \
	  export LD_LIBRARY_PATH="@prefix@/linalg/default/lib:@prefix@/libxc/default/lib:${LD_LIBRARY_PATH}" && \
	  export LIBRARY_PATH="@prefix@/linalg/default/lib:@prefix@/libxc/default/lib:${LIBRARY_PATH}" && \
	  CPP="$(CPP)" \
	  CPPFLAGS="$(CPPFLAGS_ATOMPAW) $(afb_linalg_incs) $(afb_libxc_incs) $(AM_CPPFLAGS)" \
	  CC="$(CC)" \
	  CFLAGS="$(CFLAGS_ATOMPAW)" \
	  CXX="$(CXX)" \
	  CXXFLAGS="$(CXXFLAGS_ATOMPAW)" \
          FCCPP="$(TRUE_CPP)" \
	  F77="$(FC)" \
	  FFLAGS="$(FCFLAGS_FIXEDFORM) $(FCFLAGS_ATOMPAW) $(afb_linalg_incs) $(afb_libxc_incs) $(AM_CPPFLAGS)" \
	  F90="$(FC)" \
	  F90FLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_ATOMPAW) $(afb_linalg_incs) $(afb_libxc_incs) $(AM_CPPFLAGS)" \
	  FC="$(FC)" \
	  FCFLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_ATOMPAW) $(afb_linalg_incs) $(afb_libxc_incs) $(AM_CPPFLAGS)" \
	  LDFLAGS="$(FC_LDFLAGS) $(LDFLAGS_ATOMPAW)" \
	  LIBS="$(LIBS_ATOMPAW) $(afb_linalg_libs) $(afb_libxc_libs)" \
	  AR="$(AR)" \
	  ARFLAGS="$(ARFLAGS) $(ARFLAGS_CMD)" \
	  RANLIB="$(RANLIB)" \
	  ac_fc_srcext="F90" \
	  /bin/sh ../configure \
	    --prefix="@prefix@/atompaw/4.1.0.5" \
	    --bindir="@prefix@/atompaw/4.1.0.5/bin" \
	    --includedir="@prefix@/atompaw/4.1.0.5/include" \
	    --libdir="@prefix@/atompaw/4.1.0.5/lib" \
	    $(CFGFLAGS_ATOMPAW)
	@touch stamps/atompaw-config-stamp

stamps/atompaw-patch-stamp: stamps/atompaw-unfold-stamp
	@echo "No patch to apply"
	@touch stamps/atompaw-patch-stamp

stamps/atompaw-unfold-stamp:
	cd sources && \
	  gzip -cd $(abinit_tardir)/$(atompaw_pkg_name).tar.gz | tar xf -
	mkdir sources/$(atompaw_pkg_name)/tmp-build
	@touch stamps/atompaw-unfold-stamp
else
atompaw:
	@echo "The build of atompaw has been disabled"
	@touch stamps/atompaw-install-stamp
endif

                    ########################################

# Package clean-up: atompaw
clean_atompaw:
	rm -rf exports/atompaw-4.1.0.5 sources/atompaw-4.1.0.5 stamps/atompaw-*

                    ########################################

# Package: netcdf4
netcdf4_pkg_name = @netcdf4_pkg_name@

if DO_BUILD_NETCDF4
netcdf4: stamps/netcdf4-install-stamp

stamps/netcdf4-install-stamp: stamps/netcdf4-build-stamp
	cd sources/$(netcdf4_pkg_name)/tmp-build && $(MAKE) install @SET_MAKE@
	rm -f $(DESTDIR)@prefix@/netcdf4/default
	$(LN_S) 4.4.1.1 $(DESTDIR)@prefix@/netcdf4/default
	@touch stamps/netcdf4-install-stamp

stamps/netcdf4-build-stamp: stamps/netcdf4-config-stamp
	cd sources/$(netcdf4_pkg_name)/tmp-build && $(MAKE) -j 4 @SET_MAKE@
	@touch stamps/netcdf4-build-stamp

stamps/netcdf4-config-stamp: stamps/netcdf4-patch-stamp
	cd sources/$(netcdf4_pkg_name)/tmp-build && \
	  export DYLD_LIBRARY_PATH="${DYLD_LIBRARY_PATH}" && \
	  export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}" && \
	  export LIBRARY_PATH="${LIBRARY_PATH}" && \
	  CPP="$(CPP)" \
	  CPPFLAGS="$(CPPFLAGS_NETCDF4)  $(AM_CPPFLAGS)" \
	  CC="$(CC_NETCDF4)" \
	  CFLAGS="$(CFLAGS_NETCDF4)" \
	  CXX="$(CXX_NETCDF4)" \
	  CXXFLAGS="$(CXXFLAGS_NETCDF4)" \
          FCCPP="$(TRUE_CPP)" \
	  F77="$(FC_NETCDF4)" \
	  FFLAGS="$(FCFLAGS_FIXEDFORM) $(FCFLAGS_NETCDF4)  $(AM_CPPFLAGS)" \
	  F90="$(FC_NETCDF4)" \
	  F90FLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_NETCDF4)  $(AM_CPPFLAGS)" \
	  FC="$(FC_NETCDF4)" \
	  FCFLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_NETCDF4)  $(AM_CPPFLAGS)" \
	  LDFLAGS="$(FC_LDFLAGS) $(LDFLAGS_NETCDF4)" \
	  LIBS="$(LIBS_NETCDF4) " \
	  AR="$(AR)" \
	  ARFLAGS="$(ARFLAGS) $(ARFLAGS_CMD)" \
	  RANLIB="$(RANLIB)" \
	  ac_fc_srcext="F90" \
	  /bin/sh ../configure \
	    --prefix="@prefix@/netcdf4/4.4.1.1" \
	    --bindir="@prefix@/netcdf4/4.4.1.1/bin" \
	    --includedir="@prefix@/netcdf4/4.4.1.1/include" \
	    --libdir="@prefix@/netcdf4/4.4.1.1/lib" \
	    $(CFGFLAGS_NETCDF4)
	@touch stamps/netcdf4-config-stamp

stamps/netcdf4-patch-stamp: stamps/netcdf4-unfold-stamp
	@echo "No patch to apply"
	@touch stamps/netcdf4-patch-stamp

stamps/netcdf4-unfold-stamp:
	cd sources && \
	  gzip -cd $(abinit_tardir)/$(netcdf4_pkg_name).tar.gz | tar xf -
	mkdir sources/$(netcdf4_pkg_name)/tmp-build
	@touch stamps/netcdf4-unfold-stamp
else
netcdf4:
	@echo "The build of netcdf4 has been disabled"
	@touch stamps/netcdf4-install-stamp
endif

                    ########################################

# Package clean-up: netcdf4
clean_netcdf4:
	rm -rf exports/netcdf-4.4.1.1 sources/netcdf-4.4.1.1 stamps/netcdf4-*

                    ########################################

# Package: netcdf4_fortran
netcdf4_fortran_pkg_name = @netcdf4_fortran_pkg_name@

if DO_BUILD_NETCDF4_FORTRAN
netcdf4_fortran: stamps/netcdf4_fortran-install-stamp

stamps/netcdf4_fortran-install-stamp: stamps/netcdf4_fortran-build-stamp
	cd sources/$(netcdf4_fortran_pkg_name)/tmp-build && $(MAKE) install @SET_MAKE@
	rm -f $(DESTDIR)@prefix@/netcdf4_fortran/default
	$(LN_S) 4.4.4 $(DESTDIR)@prefix@/netcdf4_fortran/default
	@touch stamps/netcdf4_fortran-install-stamp

stamps/netcdf4_fortran-build-stamp: stamps/netcdf4_fortran-config-stamp
	cd sources/$(netcdf4_fortran_pkg_name)/tmp-build && $(MAKE) -j 4 @SET_MAKE@
	@touch stamps/netcdf4_fortran-build-stamp

stamps/netcdf4_fortran-config-stamp: stamps/netcdf4_fortran-patch-stamp
	cd sources/$(netcdf4_fortran_pkg_name)/tmp-build && \
	  export DYLD_LIBRARY_PATH="@prefix@/netcdf4/default/lib:${DYLD_LIBRARY_PATH}" && \
	  export LD_LIBRARY_PATH="@prefix@/netcdf4/default/lib:${LD_LIBRARY_PATH}" && \
	  export LIBRARY_PATH="@prefix@/netcdf4/default/lib:${LIBRARY_PATH}" && \
	  CPP="$(CPP)" \
	  CPPFLAGS="$(CPPFLAGS_NETCDF4_FORTRAN) $(afb_netcdf4_incs) $(AM_CPPFLAGS)" \
	  CC="$(CC)" \
	  CFLAGS="$(CFLAGS_NETCDF4_FORTRAN)" \
	  CXX="$(CXX)" \
	  CXXFLAGS="$(CXXFLAGS_NETCDF4_FORTRAN)" \
          FCCPP="$(TRUE_CPP)" \
	  F77="$(FC)" \
	  FFLAGS="$(FCFLAGS_FIXEDFORM) $(FCFLAGS_NETCDF4_FORTRAN) $(afb_netcdf4_incs) $(AM_CPPFLAGS)" \
	  F90="$(FC)" \
	  F90FLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_NETCDF4_FORTRAN) $(afb_netcdf4_incs) $(AM_CPPFLAGS)" \
	  FC="$(FC)" \
	  FCFLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_NETCDF4_FORTRAN) $(afb_netcdf4_incs) $(AM_CPPFLAGS)" \
	  LDFLAGS="$(FC_LDFLAGS) $(LDFLAGS_NETCDF4_FORTRAN)" \
	  LIBS="$(LIBS_NETCDF4_FORTRAN) $(afb_netcdf4_libs)" \
	  AR="$(AR)" \
	  ARFLAGS="$(ARFLAGS) $(ARFLAGS_CMD)" \
	  RANLIB="$(RANLIB)" \
	  ac_fc_srcext="F90" \
	  /bin/sh ../configure \
	    --prefix="@prefix@/netcdf4_fortran/4.4.4" \
	    --bindir="@prefix@/netcdf4_fortran/4.4.4/bin" \
	    --includedir="@prefix@/netcdf4_fortran/4.4.4/include" \
	    --libdir="@prefix@/netcdf4_fortran/4.4.4/lib" \
	    $(CFGFLAGS_NETCDF4_FORTRAN)
	@touch stamps/netcdf4_fortran-config-stamp

stamps/netcdf4_fortran-patch-stamp: stamps/netcdf4_fortran-unfold-stamp
	@echo "No patch to apply"
	@touch stamps/netcdf4_fortran-patch-stamp

stamps/netcdf4_fortran-unfold-stamp:
	cd sources && \
	  gzip -cd $(abinit_tardir)/$(netcdf4_fortran_pkg_name).tar.gz | tar xf -
	mkdir sources/$(netcdf4_fortran_pkg_name)/tmp-build
	@touch stamps/netcdf4_fortran-unfold-stamp
else
netcdf4_fortran:
	@echo "The build of netcdf4_fortran has been disabled"
	@touch stamps/netcdf4_fortran-install-stamp
endif

                    ########################################

# Package clean-up: netcdf4_fortran
clean_netcdf4_fortran:
	rm -rf exports/netcdf-fortran-4.4.4 sources/netcdf-fortran-4.4.4 stamps/netcdf4_fortran-*

                    ########################################

# Package: wannier90
wannier90_pkg_name = @wannier90_pkg_name@

if DO_BUILD_WANNIER90
wannier90: stamps/wannier90-install-stamp

stamps/wannier90-install-stamp: stamps/wannier90-build-stamp
	cd sources/$(wannier90_pkg_name)/tmp-build && $(MAKE) install @SET_MAKE@
	rm -f $(DESTDIR)@prefix@/wannier90/default
	$(LN_S) 2.0.1.1 $(DESTDIR)@prefix@/wannier90/default
	@touch stamps/wannier90-install-stamp

stamps/wannier90-build-stamp: stamps/wannier90-config-stamp
	cd sources/$(wannier90_pkg_name)/tmp-build && $(MAKE) -j 4 @SET_MAKE@
	@touch stamps/wannier90-build-stamp

stamps/wannier90-config-stamp: stamps/wannier90-patch-stamp
	cd sources/$(wannier90_pkg_name)/tmp-build && \
	  export DYLD_LIBRARY_PATH="@prefix@/linalg/default/lib:${DYLD_LIBRARY_PATH}" && \
	  export LD_LIBRARY_PATH="@prefix@/linalg/default/lib:${LD_LIBRARY_PATH}" && \
	  export LIBRARY_PATH="@prefix@/linalg/default/lib:${LIBRARY_PATH}" && \
	  CPP="$(CPP)" \
	  CPPFLAGS="$(CPPFLAGS_WANNIER90) $(afb_linalg_incs) $(AM_CPPFLAGS)" \
	  CC="$(CC)" \
	  CFLAGS="$(CFLAGS_WANNIER90)" \
	  CXX="$(CXX)" \
	  CXXFLAGS="$(CXXFLAGS_WANNIER90)" \
          FCCPP="$(TRUE_CPP)" \
	  F77="$(FC)" \
	  FFLAGS="$(FCFLAGS_FIXEDFORM) $(FCFLAGS_WANNIER90) $(afb_linalg_incs) $(AM_CPPFLAGS)" \
	  F90="$(FC)" \
	  F90FLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_WANNIER90) $(afb_linalg_incs) $(AM_CPPFLAGS)" \
	  FC="$(FC)" \
	  FCFLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_WANNIER90) $(afb_linalg_incs) $(AM_CPPFLAGS)" \
	  LDFLAGS="$(FC_LDFLAGS) $(LDFLAGS_WANNIER90)" \
	  LIBS="$(LIBS_WANNIER90) $(afb_linalg_libs)" \
	  AR="$(AR)" \
	  ARFLAGS="$(ARFLAGS) $(ARFLAGS_CMD)" \
	  RANLIB="$(RANLIB)" \
	  ac_fc_srcext="F90" \
	  /bin/sh ../configure \
	    --prefix="@prefix@/wannier90/2.0.1.1" \
	    --bindir="@prefix@/wannier90/2.0.1.1/bin" \
	    --includedir="@prefix@/wannier90/2.0.1.1/include" \
	    --libdir="@prefix@/wannier90/2.0.1.1/lib" \
	    $(CFGFLAGS_WANNIER90)
	@touch stamps/wannier90-config-stamp

stamps/wannier90-patch-stamp: stamps/wannier90-unfold-stamp
	@echo "No patch to apply"
	@touch stamps/wannier90-patch-stamp

stamps/wannier90-unfold-stamp:
	cd sources && \
	  gzip -cd $(abinit_tardir)/$(wannier90_pkg_name).tar.gz | tar xf -
	mkdir sources/$(wannier90_pkg_name)/tmp-build
	@touch stamps/wannier90-unfold-stamp
else
wannier90:
	@echo "The build of wannier90 has been disabled"
	@touch stamps/wannier90-install-stamp
endif

                    ########################################

# Package clean-up: wannier90
clean_wannier90:
	rm -rf exports/wannier90-2.0.1.1 sources/wannier90-2.0.1.1 stamps/wannier90-*

                    ########################################

# Package: xmlf90
xmlf90_pkg_name = @xmlf90_pkg_name@

if DO_BUILD_XMLF90
xmlf90: stamps/xmlf90-install-stamp

stamps/xmlf90-install-stamp: stamps/xmlf90-build-stamp
	cd sources/$(xmlf90_pkg_name)/tmp-build && $(MAKE) install @SET_MAKE@
	rm -f $(DESTDIR)@prefix@/xmlf90/default
	$(LN_S) 1.5.3.1 $(DESTDIR)@prefix@/xmlf90/default
	@touch stamps/xmlf90-install-stamp

stamps/xmlf90-build-stamp: stamps/xmlf90-config-stamp
	cd sources/$(xmlf90_pkg_name)/tmp-build && $(MAKE) -j 4 @SET_MAKE@
	@touch stamps/xmlf90-build-stamp

stamps/xmlf90-config-stamp: stamps/xmlf90-patch-stamp
	cd sources/$(xmlf90_pkg_name)/tmp-build && \
	  export DYLD_LIBRARY_PATH="${DYLD_LIBRARY_PATH}" && \
	  export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}" && \
	  export LIBRARY_PATH="${LIBRARY_PATH}" && \
	  CPP="$(CPP)" \
	  CPPFLAGS="$(CPPFLAGS_XMLF90)  $(AM_CPPFLAGS)" \
	  CC="$(CC)" \
	  CFLAGS="$(CFLAGS_XMLF90)" \
	  CXX="$(CXX)" \
	  CXXFLAGS="$(CXXFLAGS_XMLF90)" \
          FCCPP="$(TRUE_CPP)" \
	  F77="$(FC)" \
	  FFLAGS="$(FCFLAGS_FIXEDFORM) $(FCFLAGS_XMLF90)  $(AM_CPPFLAGS)" \
	  F90="$(FC)" \
	  F90FLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_XMLF90)  $(AM_CPPFLAGS)" \
	  FC="$(FC)" \
	  FCFLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_XMLF90)  $(AM_CPPFLAGS)" \
	  LDFLAGS="$(FC_LDFLAGS) $(LDFLAGS_XMLF90)" \
	  LIBS="$(LIBS_XMLF90) " \
	  AR="$(AR)" \
	  ARFLAGS="$(ARFLAGS) $(ARFLAGS_CMD)" \
	  RANLIB="$(RANLIB)" \
	  ac_fc_srcext="F90" \
	  /bin/sh ../configure \
	    --prefix="@prefix@/xmlf90/1.5.3.1" \
	    --bindir="@prefix@/xmlf90/1.5.3.1/bin" \
	    --includedir="@prefix@/xmlf90/1.5.3.1/include" \
	    --libdir="@prefix@/xmlf90/1.5.3.1/lib" \
	    $(CFGFLAGS_XMLF90)
	@touch stamps/xmlf90-config-stamp

stamps/xmlf90-patch-stamp: stamps/xmlf90-unfold-stamp
	@echo "No patch to apply"
	@touch stamps/xmlf90-patch-stamp

stamps/xmlf90-unfold-stamp:
	cd sources && \
	  gzip -cd $(abinit_tardir)/$(xmlf90_pkg_name).tar.gz | tar xf -
	mkdir sources/$(xmlf90_pkg_name)/tmp-build
	@touch stamps/xmlf90-unfold-stamp
else
xmlf90:
	@echo "The build of xmlf90 has been disabled"
	@touch stamps/xmlf90-install-stamp
endif

                    ########################################

# Package clean-up: xmlf90
clean_xmlf90:
	rm -rf exports/xmlf90-1.5.3.1 sources/xmlf90-1.5.3.1 stamps/xmlf90-*

                    ########################################

# Package: libpsml
libpsml_pkg_name = @libpsml_pkg_name@

if DO_BUILD_LIBPSML
libpsml: stamps/libpsml-install-stamp

stamps/libpsml-install-stamp: stamps/libpsml-build-stamp
	cd sources/$(libpsml_pkg_name)/tmp-build && $(MAKE) install @SET_MAKE@
	rm -f $(DESTDIR)@prefix@/libpsml/default
	$(LN_S) 1.1.7 $(DESTDIR)@prefix@/libpsml/default
	@touch stamps/libpsml-install-stamp

stamps/libpsml-build-stamp: stamps/libpsml-config-stamp
	cd sources/$(libpsml_pkg_name)/tmp-build && $(MAKE) -j 1 @SET_MAKE@
	@touch stamps/libpsml-build-stamp

stamps/libpsml-config-stamp: stamps/libpsml-patch-stamp
	cd sources/$(libpsml_pkg_name)/tmp-build && \
	  export DYLD_LIBRARY_PATH="@prefix@/libxc/default/lib:@prefix@/xmlf90/default/lib:${DYLD_LIBRARY_PATH}" && \
	  export LD_LIBRARY_PATH="@prefix@/libxc/default/lib:@prefix@/xmlf90/default/lib:${LD_LIBRARY_PATH}" && \
	  export LIBRARY_PATH="@prefix@/libxc/default/lib:@prefix@/xmlf90/default/lib:${LIBRARY_PATH}" && \
	  CPP="$(CPP)" \
	  CPPFLAGS="$(CPPFLAGS_LIBPSML) $(afb_libxc_incs) $(afb_xmlf90_incs) $(AM_CPPFLAGS)" \
	  CC="$(CC)" \
	  CFLAGS="$(CFLAGS_LIBPSML)" \
	  CXX="$(CXX)" \
	  CXXFLAGS="$(CXXFLAGS_LIBPSML)" \
          FCCPP="$(TRUE_CPP)" \
	  F77="$(FC)" \
	  FFLAGS="$(FCFLAGS_FIXEDFORM) $(FCFLAGS_LIBPSML) $(afb_libxc_incs) $(afb_xmlf90_incs) $(AM_CPPFLAGS)" \
	  F90="$(FC)" \
	  F90FLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_LIBPSML) $(afb_libxc_incs) $(afb_xmlf90_incs) $(AM_CPPFLAGS)" \
	  FC="$(FC)" \
	  FCFLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_LIBPSML) $(afb_libxc_incs) $(afb_xmlf90_incs) $(AM_CPPFLAGS)" \
	  LDFLAGS="$(FC_LDFLAGS) $(LDFLAGS_LIBPSML)" \
	  LIBS="$(LIBS_LIBPSML) $(afb_libxc_libs) $(afb_xmlf90_libs)" \
	  AR="$(AR)" \
	  ARFLAGS="$(ARFLAGS) $(ARFLAGS_CMD)" \
	  RANLIB="$(RANLIB)" \
	  ac_fc_srcext="F90" \
	  /bin/sh ../configure \
	    --prefix="@prefix@/libpsml/1.1.7" \
	    --bindir="@prefix@/libpsml/1.1.7/bin" \
	    --includedir="@prefix@/libpsml/1.1.7/include" \
	    --libdir="@prefix@/libpsml/1.1.7/lib" \
	    $(CFGFLAGS_LIBPSML)
	@touch stamps/libpsml-config-stamp

stamps/libpsml-patch-stamp: stamps/libpsml-unfold-stamp
	@echo "No patch to apply"
	@touch stamps/libpsml-patch-stamp

stamps/libpsml-unfold-stamp:
	cd sources && \
	  gzip -cd $(abinit_tardir)/$(libpsml_pkg_name).tar.gz | tar xf -
	mkdir sources/$(libpsml_pkg_name)/tmp-build
	@touch stamps/libpsml-unfold-stamp
else
libpsml:
	@echo "The build of libpsml has been disabled"
	@touch stamps/libpsml-install-stamp
endif

                    ########################################

# Package clean-up: libpsml
clean_libpsml:
	rm -rf exports/libpsml-1.1.7 sources/libpsml-1.1.7 stamps/libpsml-*

                    ########################################

# Package: yaml
yaml_pkg_name = @yaml_pkg_name@

if DO_BUILD_YAML
yaml: stamps/yaml-install-stamp

stamps/yaml-install-stamp: stamps/yaml-build-stamp
	cd sources/$(yaml_pkg_name)/tmp-build && $(MAKE) install @SET_MAKE@
	rm -f $(DESTDIR)@prefix@/yaml/default
	$(LN_S) 0.1.6 $(DESTDIR)@prefix@/yaml/default
	@touch stamps/yaml-install-stamp

stamps/yaml-build-stamp: stamps/yaml-config-stamp
	cd sources/$(yaml_pkg_name)/tmp-build && $(MAKE) -j 4 @SET_MAKE@
	@touch stamps/yaml-build-stamp

stamps/yaml-config-stamp: stamps/yaml-patch-stamp
	cd sources/$(yaml_pkg_name)/tmp-build && \
	  export DYLD_LIBRARY_PATH="${DYLD_LIBRARY_PATH}" && \
	  export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}" && \
	  export LIBRARY_PATH="${LIBRARY_PATH}" && \
	  CPP="$(CPP)" \
	  CPPFLAGS="$(CPPFLAGS_YAML)  $(AM_CPPFLAGS)" \
	  CC="$(CC)" \
	  CFLAGS="$(CFLAGS_YAML)" \
	  CXX="$(CXX)" \
	  CXXFLAGS="$(CXXFLAGS_YAML)" \
          FCCPP="$(TRUE_CPP)" \
	  F77="$(FC)" \
	  FFLAGS="$(FCFLAGS_FIXEDFORM) $(FCFLAGS_YAML)  $(AM_CPPFLAGS)" \
	  F90="$(FC)" \
	  F90FLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_YAML)  $(AM_CPPFLAGS)" \
	  FC="$(FC)" \
	  FCFLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_YAML)  $(AM_CPPFLAGS)" \
	  LDFLAGS="$(FC_LDFLAGS) $(LDFLAGS_YAML)" \
	  LIBS="$(LIBS_YAML) " \
	  AR="$(AR)" \
	  ARFLAGS="$(ARFLAGS) $(ARFLAGS_CMD)" \
	  RANLIB="$(RANLIB)" \
	  ac_fc_srcext="F90" \
	  /bin/sh ../configure \
	    --prefix="@prefix@/yaml/0.1.6" \
	    --bindir="@prefix@/yaml/0.1.6/bin" \
	    --includedir="@prefix@/yaml/0.1.6/include" \
	    --libdir="@prefix@/yaml/0.1.6/lib" \
	    $(CFGFLAGS_YAML)
	@touch stamps/yaml-config-stamp

stamps/yaml-patch-stamp: stamps/yaml-unfold-stamp
	@echo "No patch to apply"
	@touch stamps/yaml-patch-stamp

stamps/yaml-unfold-stamp:
	cd sources && \
	  gzip -cd $(abinit_tardir)/$(yaml_pkg_name).tar.gz | tar xf -
	mkdir sources/$(yaml_pkg_name)/tmp-build
	@touch stamps/yaml-unfold-stamp
else
yaml:
	@echo "The build of yaml has been disabled"
	@touch stamps/yaml-install-stamp
endif

                    ########################################

# Package clean-up: yaml
clean_yaml:
	rm -rf exports/yaml-0.1.6 sources/yaml-0.1.6 stamps/yaml-*

                    ########################################

# Package: bigdft
bigdft_pkg_name = @bigdft_pkg_name@

if DO_BUILD_BIGDFT
bigdft: stamps/bigdft-install-stamp

stamps/bigdft-install-stamp: stamps/bigdft-build-stamp
	cd sources/$(bigdft_pkg_name)/tmp-build && $(MAKE) install @SET_MAKE@
	rm -f $(DESTDIR)@prefix@/bigdft/default
	$(LN_S) abinit-1.7.1.28 $(DESTDIR)@prefix@/bigdft/default
	@touch stamps/bigdft-install-stamp

stamps/bigdft-build-stamp: stamps/bigdft-config-stamp
	cd sources/$(bigdft_pkg_name)/tmp-build && $(MAKE) -j 4 @SET_MAKE@
	@touch stamps/bigdft-build-stamp

stamps/bigdft-config-stamp: stamps/bigdft-patch-stamp
	cd sources/$(bigdft_pkg_name)/tmp-build && \
	  export DYLD_LIBRARY_PATH="@prefix@/linalg/default/lib:@prefix@/netcdf4_fortran/default/lib:@prefix@/libxc/default/lib:@prefix@/yaml/default/lib:${DYLD_LIBRARY_PATH}" && \
	  export LD_LIBRARY_PATH="@prefix@/linalg/default/lib:@prefix@/netcdf4_fortran/default/lib:@prefix@/libxc/default/lib:@prefix@/yaml/default/lib:${LD_LIBRARY_PATH}" && \
	  export LIBRARY_PATH="@prefix@/linalg/default/lib:@prefix@/netcdf4_fortran/default/lib:@prefix@/libxc/default/lib:@prefix@/yaml/default/lib:${LIBRARY_PATH}" && \
	  CPP="$(CPP)" \
	  CPPFLAGS="$(CPPFLAGS_BIGDFT) $(afb_linalg_incs) $(afb_netcdf4_fortran_incs) $(afb_libxc_incs) $(afb_yaml_incs) $(AM_CPPFLAGS)" \
	  CC="$(CC)" \
	  CFLAGS="$(CFLAGS_BIGDFT)" \
	  CXX="$(CXX)" \
	  CXXFLAGS="$(CXXFLAGS_BIGDFT)" \
          FCCPP="$(TRUE_CPP)" \
	  F77="$(FC)" \
	  FFLAGS="$(FCFLAGS_FIXEDFORM) $(FCFLAGS_BIGDFT) $(afb_linalg_incs) $(afb_netcdf4_fortran_incs) $(afb_libxc_incs) $(afb_yaml_incs) $(AM_CPPFLAGS)" \
	  F90="$(FC)" \
	  F90FLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_BIGDFT) $(afb_linalg_incs) $(afb_netcdf4_fortran_incs) $(afb_libxc_incs) $(afb_yaml_incs) $(AM_CPPFLAGS)" \
	  FC="$(FC)" \
	  FCFLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_BIGDFT) $(afb_linalg_incs) $(afb_netcdf4_fortran_incs) $(afb_libxc_incs) $(afb_yaml_incs) $(AM_CPPFLAGS)" \
	  LDFLAGS="$(FC_LDFLAGS) $(LDFLAGS_BIGDFT)" \
	  LIBS="$(LIBS_BIGDFT) $(afb_linalg_libs) $(afb_netcdf4_fortran_libs) $(afb_libxc_libs) $(afb_yaml_libs)" \
	  AR="$(AR)" \
	  ARFLAGS="$(ARFLAGS) $(ARFLAGS_CMD)" \
	  RANLIB="$(RANLIB)" \
	  ac_fc_srcext="F90" \
	  /bin/sh ../configure \
	    --prefix="@prefix@/bigdft/abinit-1.7.1.28" \
	    --bindir="@prefix@/bigdft/abinit-1.7.1.28/bin" \
	    --includedir="@prefix@/bigdft/abinit-1.7.1.28/include" \
	    --libdir="@prefix@/bigdft/abinit-1.7.1.28/lib" \
	    $(CFGFLAGS_BIGDFT)
	@touch stamps/bigdft-config-stamp

stamps/bigdft-patch-stamp: stamps/bigdft-unfold-stamp
	@echo "No patch to apply"
	@touch stamps/bigdft-patch-stamp

stamps/bigdft-unfold-stamp:
	cd sources && \
	  gzip -cd $(abinit_tardir)/$(bigdft_pkg_name).tar.gz | tar xf -
	mkdir sources/$(bigdft_pkg_name)/tmp-build
	@touch stamps/bigdft-unfold-stamp
else
bigdft:
	@echo "The build of bigdft has been disabled"
	@touch stamps/bigdft-install-stamp
endif

                    ########################################

# Package clean-up: bigdft
clean_bigdft:
	rm -rf exports/bigdft-abinit-1.7.1.28 sources/bigdft-abinit-1.7.1.28 stamps/bigdft-*

                    ########################################
                    ########################################

check-local:
	-cd sources/$(libxc_pkg_name) && $(MAKE) check @SET_MAKE@
	-cd sources/$(linalg_pkg_name) && $(MAKE) check @SET_MAKE@
	-cd sources/$(atompaw_pkg_name) && $(MAKE) check @SET_MAKE@
	-cd sources/$(netcdf4_pkg_name) && $(MAKE) check @SET_MAKE@
	-cd sources/$(netcdf4_fortran_pkg_name) && $(MAKE) check @SET_MAKE@
	-cd sources/$(wannier90_pkg_name) && $(MAKE) check @SET_MAKE@
	-cd sources/$(xmlf90_pkg_name) && $(MAKE) check @SET_MAKE@
	-cd sources/$(libpsml_pkg_name) && $(MAKE) check @SET_MAKE@
	-cd sources/$(yaml_pkg_name) && $(MAKE) check @SET_MAKE@
	-cd sources/$(bigdft_pkg_name) && $(MAKE) check @SET_MAKE@

clean-local:
	rm -rf sources/* exports/* stamps/*

EXTRA_DIST = \
	autogen.sh \
	wipeout.sh \
	config/scripts/add-header-typed \
	config/scripts/make-config-dumper \
	config/scripts/make-fallbacks-config-in \
	config/scripts/make-install-symlinks-in \
	config/scripts/make-install-symlinks-in.orig \
	config/scripts/make-macros-environment \
	config/scripts/make-macros-fallbacks \
	config/scripts/make-macros-info \
	config/scripts/make-macros-options \
	config/scripts/make-macros-patches \
	config/scripts/make-makefiles-fallbacks \
	config/specs/atompaw.cfg \
	config/specs/bigdft.cfg \
	config/specs/environment.conf \
	config/specs/fallbacks.cfg \
	config/specs/fallbacks.conf \
	config/specs/languages.conf \
	config/specs/libpsml.cfg \
	config/specs/libxc.cfg \
	config/specs/linalg.cfg \
	config/specs/netcdf4.cfg \
	config/specs/netcdf4_fortran.cfg \
	config/specs/options.conf \
	config/specs/wannier90.cfg \
	config/specs/xmlf90.cfg \
	config/specs/yaml.cfg

