
.Version 8.11.6 of ABINIT 
.(MPI version, prepared for a x86_64_linux_gnu6.3 computer) 

.Copyright (C) 1998-2019 ABINIT group . 
 ABINIT comes with ABSOLUTELY NO WARRANTY.
 It is free software, and you are welcome to redistribute it
 under certain conditions (GNU General Public License,
 see ~abinit/COPYING or http://www.gnu.org/copyleft/gpl.txt).

 ABINIT is a project of the Universite Catholique de Louvain,
 Corning Inc. and other collaborators, see ~abinit/doc/developers/contributors.txt .
 Please read https://docs.abinit.org/theory/acknowledgments for suggested
 acknowledgments of the ABINIT effort.
 For more information, see https://www.abinit.org .

.Starting date : Fri 29 Mar 2019.
- ( at 19h15 )
  
- input  file    -> tgspw_01.in
- output file    -> tgspw_01.out
- root for input  files -> tgspw_01i
- root for output files -> tgspw_01o


--- !Autoparal
#Autoparal section for GS calculations with paral_kgb
info:
    autoparal: 1
    paral_kgb: 1
    max_ncpus: 108
    nspinor: 1
    nsppol: 1
    nkpt: 1
    mband: 648
configurations:
    - tot_ncpus: 108
      mpi_ncpus: 108
      omp_ncpus: 0
      efficiency:  0.693901756
      vars: {
            npimage: 1,
            npkpt: 1,
            npspinor: 1,
            npfft: 6,
            npband: 18,
            bandpp: 36,
            }
    - tot_ncpus: 108
      mpi_ncpus: 108
      omp_ncpus: 0
      efficiency:  0.692242577
      vars: {
            npimage: 1,
            npkpt: 1,
            npspinor: 1,
            npfft: 6,
            npband: 18,
            bandpp: 12,
            }
    - tot_ncpus: 108
      mpi_ncpus: 108
      omp_ncpus: 0
      efficiency:  0.691749151
      vars: {
            npimage: 1,
            npkpt: 1,
            npspinor: 1,
            npfft: 9,
            npband: 12,
            bandpp: 54,
            }
    - tot_ncpus: 108
      mpi_ncpus: 108
      omp_ncpus: 0
      efficiency:  0.677884017
      vars: {
            npimage: 1,
            npkpt: 1,
            npspinor: 1,
            npfft: 4,
            npband: 27,
            bandpp: 24,
            }
    - tot_ncpus: 108
      mpi_ncpus: 108
      omp_ncpus: 0
      efficiency:  0.677076033
      vars: {
            npimage: 1,
            npkpt: 1,
            npspinor: 1,
            npfft: 4,
            npband: 27,
            bandpp: 12,
            }
...

 ====================================================================================================
 Searching for all possible proc distributions for this input with #CPUs<=108:

 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 |       npkpt|       npfft|      npband|      bandpp|  #MPI(proc)|    WEIGHT|
 |    1<<    1|    1<<   22|    1<<  108|    1<<  648|    1<<  108|  <=   108|
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 |           1|           6|          18|          36|         108|    74.941|
 |           1|           6|          18|          12|         108|    74.762|
 |           1|           9|          12|          54|         108|    74.709|
 |           1|           4|          27|          24|         108|    73.211|
 |           1|           4|          27|          12|         108|    73.124|
 |           1|           4|          27|           8|         108|    73.037|
 |           1|          18|           6|          12|         108|    73.025|
 |           1|           4|          27|           6|         108|    72.950|
 |           1|           4|          27|           4|         108|    72.775|
 |           1|           4|          27|           2|         108|    72.252|
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 Only the best possible choices for nproc are printed...

 >>> Possible (best) choices for the number of bands (nband) are:
     with: npfft=6
     nband=   648 using    108 CPUs =   108 MPI x  1 threads (npband=   18)
     nband=   663 using    102 CPUs =   102 MPI x  1 threads (npband=   17)
     nband=   646 using    102 CPUs =   102 MPI x  1 threads (npband=   17)
     nband=   640 using     96 CPUs =    96 MPI x  1 threads (npband=   16)
     nband=   656 using     96 CPUs =    96 MPI x  1 threads (npband=   16)
     nband=   645 using     90 CPUs =    90 MPI x  1 threads (npband=   15)
     nband=   660 using     90 CPUs =    90 MPI x  1 threads (npband=   15)
     nband=   644 using     84 CPUs =    84 MPI x  1 threads (npband=   14)
     nband=   658 using     84 CPUs =    84 MPI x  1 threads (npband=   14)
     nband=   650 using     78 CPUs =    78 MPI x  1 threads (npband=   13)
     nband=   637 using     78 CPUs =    78 MPI x  1 threads (npband=   13)
     nband=   636 using     72 CPUs =    72 MPI x  1 threads (npband=   12)
 >>> The present nband value (   648) seems to be the best choice!

 Launch a parallel version of ABINIT with a distribution of processors among the above list,
 and the associated input variables (npkpt, npband, npfft, bandpp, etc.).
 The higher weight should be better.
 ====================================================================================================


