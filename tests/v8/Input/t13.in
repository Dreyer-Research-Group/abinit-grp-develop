##############################################################################
#Test for multibinit, read the ddb and generate the effective potential into XML file
# Generate coefficients for the anharmonic part and run the fit process
##############################################################################
energy_reference = -173.52217240339399
prt_model = 2

dipdip = 0
dipdip_prt = 1

#---------------------------------------------------------------
#Inputs for the fitted coefficients
#---------------------------------------------------------------
fit_coeff = 1
fit_rangePower = 3 4
fit_cutoff = 7
fit_ncoeff = 10
fit_nfixcoeff  = 2
fit_fixcoeff  = 48 50

## After modifying the following section, one might need to regenerate the pickle database with runtests.py -r
#%%<BEGIN TEST_INFO>
#%% [setup]
#%% executable = multibinit
#%% need_cpp_vars = HAVE_NETCDF
#%% test_chain = t13.in,t14.in,t15.in
#%% input_ddb = t13_ddb.in
#%% md_hist = t13_HIST
#%% [files]
#%% files_to_test = 
#%%   t13.out, tolnlines = 0, tolabs = 0.0, tolrel = 0.0, fld_options = -medium;
#%%   t13_sys.xml, tolnlines = 0, tolabs = 0.0, tolrel = 0.0, fld_options = -easy;
#%%   t13_coeffs.xml, tolnlines = 0, tolabs = 0.0, tolrel = 0.0, fld_options = -easy;
#%% [paral_info]
#%% max_nprocs = 1
#%% [extra_info]
#%% authors = A. MARTIN
#%% keywords = Effective potential, multibinit
#%% description = 
#%%   read ddb and HIST, fit the anharmonic part and generate effective potential
#%% topics = FitProcess,LatticeModel
#%%<END TEST_INFO>
