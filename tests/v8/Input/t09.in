##############################################################################
#Test for multibinit, read DDB and generate the effective potential into XML file
##############################################################################
prt_model = 1
energy_reference = -1.7145176622E+01

dipdip = 1
dipdip_prt = 1
ifcout = 20000

brav  =  1         ! Bravais Lattice : 1-S.C., 2-F.C., 3-B.C., 4-Hex.)
ngqpt =  1  1  1   ! Monkhorst-Pack indices

nph1l  =       8 
qph1l  =      0.00000000E+00  0.00000000E+00  0.00000000E+00    1.000E+00
              0.00000000E+00  0.00000000E+00  0.50000000E+00    1.000E+00
              0.00000000E+00  0.50000000E+00  0.00000000E+00    1.000E+00
              0.00000000E+00  0.50000000E+00  0.50000000E+00    1.000E+00
              0.50000000E+00  0.00000000E+00  0.00000000E+00    1.000E+00
              0.50000000E+00  0.00000000E+00  0.50000000E+00    1.000E+00
              0.50000000E+00  0.50000000E+00  0.00000000E+00    1.000E+00
              0.50000000E+00  0.50000000E+00  0.50000000E+00    1.000E+00

n_cell =   2 2 2
dynamics =  12
temperature = 1000
ntime  = 50

## After modifying the following section, one might need to regenerate the pickle database with runtests.py -r
#%%<BEGIN TEST_INFO>
#%% [setup]
#%% executable = multibinit
#%% exclude_builders = graphene_gnu_6.4_macports
#%% input_ddb = t09.ddb.in
#%% [files]
#%% files_to_test = 
#%%   t09.out, tolnlines = 0, tolabs = 0, tolrel = 0, fld_options = -easy;
#%%   t09_model.xml, tolnlines = 0, tolabs = 0.0, tolrel = 0.0, fld_options = -easy
#%% [paral_info]
#%% max_nprocs = 1
#%% [extra_info]
#%% authors = A. MARTIN
#%% keywords = Effective potential, multibinit
#%% description = 
#%%   read ddb and generate effective potential in XML file
#%%<END TEST_INFO>
