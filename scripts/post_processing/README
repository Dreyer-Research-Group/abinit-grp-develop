post-processing tools
=====================

- AbinitBandStructureMaker.py  ***** no longer used or maintained *****
    Plot a band structure from an output file.

- ab_extended_scissors_guess.py
    Get the eigenvalues from an abinit _EIG.nc netcdf file. 

- abinit_eignc_to_bandstructure.py
    Plot the bandstructure from _EIG.nc file.

- dynamic_pol.f
    Compute the frequency-dependent polarisability from the TDDFT output.

- ElectronPhononCoupling
    Python module to analyze electron-phonon related quantities such as
    temperature dependence, zero-point motion renormalization and broadening.

- get_irreps.py
    Find the irreducible representation to which the Gamma phonons belong.

- matLab_data_analysis/
    Various scripts for MaLab treatment of the output.

- merge_ddb_nc.py 
    Merge several DDB.nc files, belonging to the same q-point.

- phondisp2abi.py
    Calculate frozen phonon frequencies, free energies, etc...

- plot_bandstructure.py
    Plot the bandstructure from _EIG.nc file.

- plot_bs.py
    Plot the electronic bandstructure, the zero-point motion renormalization
    and the broadening from a _EP.nc file.

- rf_mods.py
    Module conting the classes required by the "temperature_para.py" and
   "plot_bs.py" scripts

- rf_mods_seq.py
    Sequential version to be used if the memory required is too large

- temperature_para.py
    Compute the temperature dependence, zero-point motion renormalization 
    and broadening from _EIGR2D.nc and _EIGI2D.nc files. This script 
    produces a _EP.nc file that can be later used.

- temperature_para_seq.py
    Sequential version to be used if the memory required is too large

- wannier_bandstructure.py
    Plot the bandstructure from _EIG.nc file.

- Raman_spec.py
    Determines the Raman spectra from the anaddb output file as a function 
    of frequency.  With version 0.4 the user creates a simple input file to run
    the script. Examples are given with in the script itself.  After finding the
    anaddb output file it extracts the raman matrix. The code is documented
    internally.

- Elastic_debye.py
    Determines the derived elastic properties (Bulk, Young's Modulus, Debye
    Temperature, Thermal Conductivity @300K from Slack, etc) from the anaddb
    output file. Program is documented internally.


